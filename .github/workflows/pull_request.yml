name: Build and Tests

# Run this workflow every time a new PR wants to merge to master/main
on:
  push:
    branches:
      - spike
  pull_request:
    branches:
      - spike

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: ^1.16
      - name: Build
        run: make build
#  vet:
#    name: Vet
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Vet
#        run: make vet
  staging_acceptance:
    name: Staging Acceptance Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_USER: user
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout terraform provider
        uses: actions/checkout@v2
        with:
          path: provider
      - uses: actions/setup-go@v2
        with:
          go-version: ^1.16
      - name: debug
        uses: mxschmitt/action-tmate@v3
        env:
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_ACCEPTANCE_CLIENT_ID }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_STAGING_AUDIENCE }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_ACCEPTANCE_CLIENT_SECRET }}
          AUTH0_PASSWORD: ${{ secrets.AUTH0_PASSWORD }}
          AUTH0_USERNAME: ${{ secrets.AUTH0_USERNAME }}
          MEROXA_POSTGRES_URL: ${{ secrets.TEST_DB_URL }}
      # Run acceptance tests
      - name: Run Terraform Provider Acceptance tests
        working-directory: ./provider
        env:
          AUTH0_CLIENT_ID: ${{ secrets.AUTH0_ACCEPTANCE_CLIENT_ID }}
          AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
          AUTH0_AUDIENCE: ${{ secrets.AUTH0_STAGING_AUDIENCE }}
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_ACCEPTANCE_CLIENT_SECRET }}
          AUTH0_PASSWORD: ${{ secrets.AUTH0_PASSWORD }}
          AUTH0_USERNAME: ${{ secrets.AUTH0_USERNAME }}
          MEROXA_POSTGRES_URL: ${{ secrets.TEST_DB_URL }}
          TF_ACC: true
        run: |
          MEROXA_API_URL="https://api.staging.meroxa.io/v1" \
          MEROXA_ACCESS_TOKEN=$(curl -s --request POST \
            --url 'https://'"$AUTH0_DOMAIN"'/oauth/token' \
            --header 'content-type: application/x-www-form-urlencoded' \
            --data grant_type=password \
            --data username=$AUTH0_USERNAME \
            --data password=$AUTH0_PASSWORD \
            --data audience=$AUTH0_AUDIENCE \
            --data scope=user \
            --data 'client_id='"$AUTH0_CLIENT_ID"'' \
            --data client_secret=$AUTH0_CLIENT_SECRET | jq -r .access_token) \
          make testacc
