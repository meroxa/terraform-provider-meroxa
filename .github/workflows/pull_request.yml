name: Build and Tests

# Run this workflow every time a new PR wants to merge to master/main
on:
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'README.md'
      - 'CHANGELOG.md'
      - 'LICENSE'
      - 'Makefile'
      - 'docs/**'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v3
        with:
          go-version: ^1.18
      - name: Build
        run: make build
  vet:
    name: Vet
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Vet
        run: make vet
  staging_acceptance:
    name: Staging Acceptance Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout terraform provider
        uses: actions/checkout@v4
        with:
          path: provider
      - uses: actions/setup-go@v3
        with:
          go-version: ^1.18
      # Run acceptance tests
      - name: Run Terraform Provider Acceptance tests
        working-directory: ./provider
        env:
          MEROXA_AUTH_CLIENT_ID: ${{ secrets.AUTH0_ACCEPTANCE_STAGING_CLIENT_ID }}
          MEROXA_AUTH_DOMAIN: ${{ secrets.AUTH0_STAGING_DOMAIN }}
          MEROXA_AUTH_AUDIENCE: ${{ secrets.AUTH0_STAGING_AUDIENCE }}
          MEROXA_AUTH_CLIENT_SECRET: ${{ secrets.AUTH0_ACCEPTANCE_STAGING_CLIENT_SECRET }}
          MEROXA_AUTH_PASSWORD: ${{ secrets.AUTH0_PASSWORD }}
          MEROXA_AUTH_USERNAME: ${{ secrets.AUTH0_USERNAME }}
          MEROXA_POSTGRES_URL: ${{ secrets.TEST_DB_URL }}
          MEROXA_BASTION_HOST: ${{ secrets.TEST_BASTION_URL }}
          MEROXA_BASTION_KEY: ${{ secrets.TEST_BASTION_PRIVATE_KEY }}
          MEROXA_PRIVATE_POSTGRES_URL: ${{ secrets.TEST_PRIVATE_PG_URL }}
          TF_ACC: true
        run: |
          export MEROXA_API_URL="https://api.staging.meroxa.io/v1"
          export MEROXA_ACCESS_TOKEN=$(curl -s --request POST \
            --url 'https://'"$MEROXA_AUTH_DOMAIN"'/oauth/token' \
            --header 'content-type: application/x-www-form-urlencoded' \
            --data grant_type=password \
            --data username=$MEROXA_AUTH_USERNAME \
            --data password=$MEROXA_AUTH_PASSWORD \
            --data audience=$MEROXA_AUTH_AUDIENCE \
            --data scope=user \
            --data 'client_id='"$MEROXA_AUTH_CLIENT_ID"'' \
            --data client_secret=$MEROXA_AUTH_CLIENT_SECRET | jq -r .access_token)
          make testacc-ci

      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.6.0
        with:
          test-results: ./provider/test.json
          package-name: meroxa
